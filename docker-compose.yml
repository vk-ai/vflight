version: '3.8'

services:
  api-service:
    build:
      context: ./backend
      dockerfile: api-service/Dockerfile
    ports:
      - "8080:8080"
    environment:
      - DB_HOST=postgres
      - DB_USER=postgres
      - DB_PASSWORD=postgres
      - DB_NAME=vflight
      - DB_PORT=5432
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - vflight-network

  user-service:
    build:
      context: ./backend
      dockerfile: user-service/Dockerfile
    ports:
      - "8081:8081"
    environment:
      - DB_HOST=postgres
      - DB_USER=postgres
      - DB_PASSWORD=postgres
      - DB_NAME=vflight
      - DB_PORT=5432
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - vflight-network

  postgres:
    image: postgres:15-alpine
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=vflight
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - vflight-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

networks:
  vflight-network:
    driver: bridge

volumes:
  postgres_data: